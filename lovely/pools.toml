[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Prevent boss blinds from disabled mods from spawning (Doesn't use get_current_pool hook)
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''
for k, v in pairs(G.GAME.banned_keys) do
    if eligible_bosses[k] then eligible_bosses[k] = nil end
end
'''
position = 'after'
payload = '''
for k, v in pairs(eligible_bosses) do
    if G.P_BLINDS[k] and not SuperRogue.is_object_mod_active(G.P_BLINDS[k], {type = 'Boss'}) then eligible_bosses[k] = nil end
end
if not next(eligible_bosses) then
    eligible_bosses['bl_manacle'] = true
end
'''
match_indent = true
times = 1

# Prevent shop from attempting to generate cards from unavailable pools
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
total_rate = total_rate + G.GAME[v:lower()..'_rate']
'''
position = 'at'
payload = '''
if SuperRogue.is_pool_available(v) then
    total_rate = total_rate + G.GAME[v:lower()..'_rate']
end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
table.insert(rates, { type = v, val = G.GAME[v:lower()..'_rate'] })
'''
position = 'at'
payload = '''
if SuperRogue.is_pool_available(v) then
    table.insert(rates, { type = v, val = G.GAME[v:lower()..'_rate'] })
end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''
_pool[#_pool+1] = SMODS.ObjectTypes[_type].default
'''
position = 'at'
payload = '''
if SuperRogue.is_object_mod_active(SMODS.ObjectTypes[_type]) then
    _pool[#_pool+1] = SMODS.ObjectTypes[_type].default
end
'''
match_indent = true
times = 1